AC_DEFUN([AX_GENERATE_SONAME_HEADERS],[
    # Generate header files for each library with the library soname for use in dlopen, etc
    AC_FOREACH([libname], $1, [
        if test "x[$VER_]libname" = "x"; then
            echo "Error, libname was in the list of headers to generate, but no [VER_]libname variable was set."
            exit 1
        fi
        if test "x[$VER_]libname" = "x-avoid-version"; then
            VERSION_LDFLAG="-avoid-version"
        else
            VERSION_LDFLAG="$(echo -version-number [$VER_]libname )"
            RELEASE_MAJOR="$( echo [$VER_]libname | cut -d: -f1 )"
        fi

        LIBNAME="$(echo libname )"
        if test "x$LIBNAME" != "xDEFAULT"; then
            LIBLIST="${LIBLIST} libname"
            if test "x[$VER_]libname" = "x-avoid-version"; then
                SONAME="$(echo [lib]libname[.so] | tr A-Z a-z)"
            else
                SONAME="$(echo [lib]libname[.so.$RELEASE_MAJOR] | tr A-Z a-z)"
            fi
            HEADER_NAME="$(echo libname[_soname.h] | tr A-Z a-z)"
            SONAME_HEADER_LIST="$SONAME_HEADER_LIST $HEADER_NAME"

            cat > ${HEADER_NAME} <<-EOF
/* Do not modify, automatically generated by configure */
#ifndef __${LIBNAME}_SONAME_H__
#define __${LIBNAME}_SONAME_H__

#define ${LIBNAME}_SONAME "$SONAME"

#endif /* __${LIBNAME}_SONAME_H__ */
EOF

            AC_SUBST(libname[_MODULE_SONAME], [$(echo $SONAME)])
        fi

        AC_SUBST(libname[_LIBRARY_VERSION], [$VERSION_LDFLAG])
    ])dnl

    for i in ${!VER_*}; do
        param=${i##VER_}
        echo "checking to see if $param has been passed as a parameter"
        found="0"
        for j in $1; do
            if test "x$param" = "x$j"; then
                found="1"
            fi
        done
        if test "x$found" != "x1"; then
            echo "Error, variable $i was set, but $param was not found in the parameter list"
            exit 1
        fi
    done

    AC_SUBST([SONAME_HEADER_LIST])
])
